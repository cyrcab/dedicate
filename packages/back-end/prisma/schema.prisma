// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id      Int    @id @default(autoincrement())
  refRole String @unique
  users   User[]
}

model User {
  id              Int            @id @default(autoincrement())
  nom             String
  prenom          String
  mail            String         @unique
  tel             String         @unique
  password        String
  dateN           DateTime?
  photo           String?
  typePaiement    String?
  Role            Role           @relation(fields: [roleId], references: [id])
  roleId          Int
  idEtablissement Int?
  Etablissement   Etablissement? @relation(fields: [idEtablissement], references: [id])
  enchere         Enchere[]
  events          Event[]        @relation("EventUser")
  lastScannedEventId  Int?           
  LastScannedEvent    Event?     @relation(name: "LastScannedEvent", fields: [lastScannedEventId], references: [id])
}

model Etablissement {
  id         Int     @id @default(autoincrement())
  nom        String
  adresse    String
  ville      String
  codePostal String
  events     Event[]
  User       User[]
}

model Diffuser {
  idMusique Int
  idEvent   Int
  slot      Int
  musique   Musique @relation(fields: [idMusique], references: [id])
  Event     Event   @relation(fields: [idEvent], references: [id])

  @@id([idMusique, idEvent])
}

model Musique {
  id           Int        @id @default(autoincrement())
  titre        String
  artiste      String
  countVote    Int
  countDiffuse Int
  diffuser     Diffuser[]
  enchere      Enchere[]
}

model Event {
  id              Int            @id @default(autoincrement())
  nom             String
  lieu            String
  date            DateTime
  type            String
  prix            Float
  nbSlots         Int
  photo           String?
  description     String?
  idEtablissement Int?
  qrCode          String?  @db.VarChar(1800)
  Etablissement   Etablissement? @relation(fields: [idEtablissement], references: [id])
  diffuser        Diffuser[]
  enchere         Enchere[]
  User            User[]         @relation("EventUser")
  LastScannedUsers  User[]       @relation("LastScannedEvent")
}

model Enchere {
  id        Int     @id @default(autoincrement())
  prix      Float
  idUser    Int
  idMusique Int
  idEvent   Int
  User      User    @relation(fields: [idUser], references: [id])
  Musique   Musique @relation(fields: [idMusique], references: [id])
  Event     Event   @relation(fields: [idEvent], references: [id])
}
